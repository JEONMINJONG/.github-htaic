name: Service API Tests

on:
  workflow_call:
    inputs:
      environment_name:
        required: false
        description: "Name of the environment that the tests will run against"
        type: string 
        default: "dev"   
      #TODO: set this to be required and come from previous steps output
      base_url:
        required: false
        description: "URL of the k8s that the tests will run against"
        type: string 
        default: "http://k8s-ht-dev-saas-uw2-1.dev.hticdev.net/"   
      working_dir:
        required: false
        description: "working directory"
        type: string
        default: .
      test_arg:
        required: false
        description: "argument to pass node for integration tests"
        type: string
        default: test:api
      node_versions:
        required: false
        description: "List of node version which want to scan"
        type: string
        default: "['lts/*']"  
      node_type:
        required: false
        description: "Call node via yarn or npm"
        type: string
        default: yarn
      AUTH_SERVICE_QUEUE:
        required: true
        description: "SQS queue for the auth service"
        type: string
        default: "sqs-ht-dev-auth-service-uw2-02"
      ORG_SERVICE_QUEUE:
        required: true
        description: "SQS queue for the org service"
        type: string
        default: "sqs-ht-dev-auth-service-uw2-01"      
      DEVICE_SERVICE_QUEUE:
        required: true
        description: "SQS queue for the device service"
        type: string
        default: "sqs-ht-dev-auth-service-uw2-03"
      SITE_SERVICE_QUEUE:
        required: true
        description: "SQS queue for the site service"
        type: string
        default: "sqs-ht-dev-auth-service-uw2-04"

    secrets:
      GH_READPAT:
        required: true
      TEST_USER_EMAIL:
        required: true
      TEST_USER_PASSWORD:
        required: true
    
env:
  TEST_ENV: ${{ inputs.environment_name }}
  TEST_BASE_URL: ${{ inputs.base_url }}
  TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
  TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}

jobs:
  api-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ${{ fromJSON(inputs.node_versions) }}
    environment: 
      name: ${{ inputs.environment_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com/
          scope: '@htaic'

      - name: Install dependencies
        working-directory: ${{ inputs.working_dir }}
        run: ${{ inputs.node_type }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_READPAT }}

      - name: Run ${{ inputs.node_type }} ${{ inputs.test_arg }}
        working-directory: ${{ inputs.working_dir }}
        run: ${{ inputs.node_type }} ${{ inputs.test_arg }}
        env:
          AWS_REGION: ${{ secrets.REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.APPID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.APPSECRET }}
          NODE_AUTH_TOKEN: ${{ secrets.GH_READPAT }}
          AUTH_SERVICE_QUEUE: ${{ inputs.AUTH_SERVICE_QUEUE }}
          ORG_SERVICE_QUEUE: ${{ inputs.AUTH_SERVICE_QUEUE }}
          DEVICE_SERVICE_QUEUE: ${{ inputs.AUTH_SERVICE_QUEUE }}
          SITE_SERVICE_QUEUE: ${{ inputs.AUTH_SERVICE_QUEUE }}
